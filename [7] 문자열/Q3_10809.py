# 문제
# 알파벳 소문자로만 이루어진 단어 S가 주어진다. 각각의 알파벳에 대해서, 단어에 포함되어 있는 경우에는 처음 등장하는 위치를, 포함되어 있지 않은 경우에는 -1을 출력하는 프로그램을 작성하시오.
#
# 입력
# 첫째 줄에 단어 S가 주어진다. 단어의 길이는 100을 넘지 않으며, 알파벳 소문자로만 이루어져 있다.
#
# 출력
# 각각의 알파벳에 대해서, a가 처음 등장하는 위치, b가 처음 등장하는 위치, ... z가 처음 등장하는 위치를 공백으로 구분해서 출력한다.
#
# 만약, 어떤 알파벳이 단어에 포함되어 있지 않다면 -1을 출력한다. 단어의 첫 번째 글자는 0번째 위치이고, 두 번째 글자는 1번째 위치이다.

from string import ascii_lowercase # 모든 알파벳 소문자
s = input()
#find : 찾는 문자열이 있으면 인덱스를 리턴하고 없으면 -1을 리턴 + find 함수는 그자체로 출력 불가, list형태로 변경해서 출력 (map)
a = list(str(s.find(c)) for c in ascii_lowercase)
# print(a) # 리스트 형식 그대로 출력
print(" ".join(a))
# ” “.join( list ) : 점 앞에 명시된 형태를 구분자 삼아 리스트에서 문자열로 바꾸어 출력해줌